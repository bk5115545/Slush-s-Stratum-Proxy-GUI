package crypto.currency;

import java.io.BufferedInputStream;

import crypto.currency.workers.Worker;
import crypto.currency.workers.WorkerRegistry;

public class Main {

	public static boolean running = true;
	static long submitted = 0;
	static long accepted = 0;
	static long rejected = 0;
	static int exactTime = 0;

	public static void main(String[] args) {
		String cmd = "mining_proxy.exe";
		final Process p = null;
		try {
			p = Runtime.getRuntime().exec(cmd);
			try {
				Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
					@Override
					public void run() {
						p.destroy();
					}
				}));
			} catch (Exception e2) { 
				System.err.println("The proxy has started but it may not be closed when this program closes.");
			}
		}
		

		new WorkerRegistry();
		InputProcessor inProc = new InputProcessor(new BufferedInputStream(p.getErrorStream()));
		inProc.start();

		//String os = System.getProperty("os.name");
		while(running) {
			try {
				Thread.currentThread();
				Thread.sleep(5000);
			} catch (Exception e) {}
			
			try {
				Runtime.getRuntime().exec("cls");
			} catch (Exception e) {}
			try {
				Runtime.getRuntime().exec("clear");
			} catch (Exception e) {}
			
			
			System.out.println("-------------------------------------------------------------------");
			System.out.print("S: "+ submitted + "\t"); System.out.print("A: " + accepted + "\t"); System.out.println("R: " + rejected);
			System.out.println("Submit Time: " + exactTime);
			System.out.println("-------------------------------------------------------------------");
			
			String[] names = WorkerRegistry.getNames();
			for(String name : names) {
				Worker w = WorkerRegistry.pollWorker(name);
				
				System.out.print("U: " + w.name + "\t");
				System.out.print("A: " + w.accepted + "   ");
				System.out.print("R: " + w.rejected + "   ");
				System.out.print("S: " + w.submitted + "   ");
				System.out.print("Q: " + w.downloaded + "   ");
				System.out.print("Diff: " + w.currentDiff);
				System.out.println();
			}
			
		}
		 
	}

}
